#!/bin/bash

set -e
D="$(dirname "$(readlink -f "$0")")"
for libdir in "$TT_LIBDIR" /usr/share/timetraveler "$D"; do
    if [ -e "$libdir/timetraveler.lib.sh" ]; then
        . "$libdir/timetraveler.lib.sh"
        lib_loaded=true
        break
    fi
done
if [ "$lib_loaded" != "true" ]; then
    >&2 echo
    >&2 echo "E: Couldn't find timetraveler libraries! Are you sure you've installed"
    >&2 echo "   timetraveler correctly?"
    >&2 echo
    exit 17
fi


function show_backup_help() {
    {
        echo
        echo "SYNOPSIS"
        echo "      timetraveler backup (-h|--help) [profile]|all"
        echo
        echo "OPTIONS"
        echo "      -r|--rsync-command [command]"
        echo "          The rsync command to use, if not on standard path"
        echo
        echo "      -o|--rsync-options '[options]'"
        echo "          Extra options to append to the rsync command (must be quoted so as not to be"
        echo "          interpreted by timetraveler"
        echo
    }
}


if ! RSYNC="$(command -v rsync)"; then
    RSYNC=
fi
RSYNC_OPTIONS=


# Loop to gather options
while test $# -gt 0; do
    case "$1" in
        -r|--rsync-command)
            shift
            RSYNC="$1"
            shift
        ;;

        -o|--rsync-options)
            shift
            RSYNC_OPTIONS="$1"
            shift
        ;;

        -h|--help)
            show_backup_help
            exit
        ;;

        all)
            PROFILE=all
            shift
        ;;

        *)
            if [ -z ${PROFILE+x} ] && [[ "$1" != -* ]]; then
                PROFILE="$1"
                shift
            else
                >&2 echo
                >&2 echo "E: Illegal command or option '$1'"
                >&2 echo
                show_backup_help >&2
                exit 18
            fi
        ;;
    esac
done



if [ -z ${PROFILE+x} ]; then
    >&2 echo
    >&2 echo "E: You must provide a valid backup profile to run, or 'all' to run all backups"
    >&2 echo
    show_backup_help >&2
    exit 19
fi



# Parse config file and check dependencies

verify_config "$HOME" # Sets TT_CONF_FILE
parse_config "$TT_CONF_FILE" # Sets CNF_PRFS* variables





# If we're running all profiles, just copy the profiles array
if [ "$PROFILE" == 'all' ]; then
    RUN_PROFILES=( "${CNF_PRFS[@]}" )

# Else, load the profile we're running
else
    RUN_PROFILES=( "$PROFILE" )

fi





# Now run all applicable backups

for prf in "${RUN_PROFILES[@]}"; do
    # Save global options in case of profile-specific override
    ORIG_RSYNC="$RSYNC"
    ORIG_RSYNC_OPTS="$RSYNC_OPTIONS"



    # Find the profile we've requested (or exit with error)
    PROF_NUM=0
    for p in "${CNF_PRFS[@]}"; do
        if [ "$p" == "$prf" ]; then
            break
        fi
        !((PROF_NUM++))
    done
    if [ "$PROF_NUM" -ge "${#CNF_PRFS[@]}" ]; then
        >&2 echo
        >&2 echo "E: The profile you've specified ('$prf') does not appear to be"
        >&2 echo "   defined in your config file. ($PROF_NUM -ge ${#CNF_PRFS[@]})"
        >&2 echo
        exit 20
    fi



    # Override globals with profile-specific variables, for applicable variables

    if [ "${CNF_PRFS_RSYNCS[$PROF_NUM]}" != "null" ]; then
        RSYNC="${CNF_PRFS_RSYNCS[$PROF_NUM]}"
    fi
    if [ "${CNF_PRFS_RSYNC_OPTS[$PROF_NUM]}" != "null" ]; then
        RSYNC_OPTIONS="${CNF_PRFS_RSYNC_OPTS[$PROF_NUM]}"
    fi





    # Do the backup

    src="${CNF_PRFS_SRCS[$PROF_NUM]}"
    bakdir="${CNF_PRFS_TRGS[$PROF_NUM]}"

    bakname="$(basename "$src").$(date +%F_%H-%M-%S)"
    if [ -e "$bakdir/$bakname" ]; then
        bakname="$bakname+"
    fi

    # Canonicalize source and backup dir and check for existence
    if ! src="$(readlink -f "$src")" || [ ! -d "$src" ]; then
        >&2 echo
        >&2 echo "E: The source directory you've specified doesn't exist! Is it on removable"
        >&2 echo "   media? (Source: $src)"
        >&2 echo
        exit 21
    fi
    if ! bakdir="$(readlink -f "$bakdir")"; then
        >&2 echo
        >&2 echo "E: The backup directory you've specified doesn't exist! Is it on removable"
        >&2 echo "   media? (Dir: $bakdir)"
        >&2 echo
        exit 22
    fi

    # If the backup directory doesn't exist, create it
    if [ ! -d "$bakdir" ]; then
        mkdir -p "$bakdir"
    fi

    dest="$bakdir/$bakname"

    echo
    echo "Creating backup of '$src' at '$dest'...."
    echo

    if [ -e "$bakdir/latest" ]; then
        linkdest="$(readlink -f "$bakdir/latest")"
        $RSYNC -aHAXx --link-dest="$linkdest" $RSYNC_OPTIONS "$src/" "$dest.partial"
    else
        $RSYNC -aHAXx $RSYNC_OPTIONS "$src/" "$dest.partial"
    fi
    mv "$dest.partial" "$dest"

    echo
    echo "Linking latest backup"
    ln -snf "$bakname" "$bakdir/latest"

    echo "Completed backup for profile '$prf'"


    # Set global options back to defaults
    RSYNC="$ORIG_RSYNC"
    RSYNC_OPTIONS="$ORIG_RSYNC_OPTS"
done

